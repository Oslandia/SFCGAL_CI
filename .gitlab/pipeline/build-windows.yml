build:windows-docker-image:
  stage: build
  tags:
    - saas-windows-medium-amd64
  rules:
    # on default branch
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: always
      changes:
        - "**/*.{c,h,cpp,hpp}"
        - "**/CMakeLists.txt"
        - "docker/*"
    # on a tag
    - if: $CI_COMMIT_TAG
      when: always
      changes:
        - "**/*.{c,h,cpp,hpp}"
        - "**/CMakeLists.txt"
        - "docker/*"
    # on a MR if previous jobs are successful
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: manual
      allow_failure: true
  before_script:
    - Start-Service -Name "docker"
    - docker login -u $env:CI_REGISTRY_USER -p $env:CI_REGISTRY_PASSWORD $env:CI_REGISTRY
  script:
    - (docker pull $env:CI_REGISTRY_IMAGE':'windows-latest) -or ($true)
    - docker build
      --pull
      --cache-from $env:CI_REGISTRY_IMAGE':'windows-latest
      --tag $env:CI_REGISTRY_IMAGE':'windows-$env:CI_COMMIT_SHA
      -f docker\Dockerfile.windows
      .
    - docker push $env:CI_REGISTRY_IMAGE':'windows-$env:CI_COMMIT_SHA
  after_script:
    - docker logout $env:CI_REGISTRY

push:windows-docker-latest:
  stage: deploy
  tags:
    - saas-windows-medium-amd64
  rules:
    # on default branch
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: always
  needs: ["build:windows-docker-image"]
  before_script:
    - Start-Service -Name "docker"
    - docker login -u $env:CI_REGISTRY_USER -p $env:CI_REGISTRY_PASSWORD $env:CI_REGISTRY
  script:
    - docker pull $env:CI_REGISTRY_IMAGE':'windows-$env:CI_COMMIT_SHA
    - docker tag $env:CI_REGISTRY_IMAGE':'windows-$env:CI_COMMIT_SHA $env:CI_REGISTRY_IMAGE':'windows-latest
    - docker push $env:CI_REGISTRY_IMAGE':'windows-latest
  after_script:
    - docker logout $env:CI_REGISTRY

push:windows-docker-tag:
  stage: deploy
  tags:
    - saas-windows-medium-amd64
  rules:
    # on a tag
    - if: $CI_COMMIT_TAG
      when: always
  before_script:
    - Start-Service -Name "docker"
    - docker login -u $env:CI_REGISTRY_USER -p $env:CI_REGISTRY_PASSWORD $env:CI_REGISTRY
  script:
    - docker pull $env:CI_REGISTRY_IMAGE':'windows-$env:CI_COMMIT_SHA
    - docker tag $env:CI_REGISTRY_IMAGE':'windows-$env:CI_COMMIT_SHA $env:CI_REGISTRY_IMAGE':'windows-$env:CI_COMMIT_REF_NAME
    - docker push $env:CI_REGISTRY_IMAGE':'windows-$env:CI_COMMIT_REF_NAME
  after_script:
    - docker logout $env:CI_REGISTRY
